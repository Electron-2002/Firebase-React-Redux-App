{"version":3,"sources":["config/firebaseConfig.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","utils/AuthRoute.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","initialState","authError","authReducer","state","action","type","console","log","payload","projects","id","title","content","projectReducer","rootReducer","combineReducers","auth","project","firebaseReducer","firestoreReducer","SignedInLinks","props","initials","profile","dispatch","useDispatch","className","to","onClick","_","getFirebase","signOut","then","SignedOutLinks","Navbar","useSelector","uid","Notifications","notifications","map","notification","key","user","moment","time","toDate","fromNow","ProjectSummary","firstName","lastName","createdAt","calendar","ProjectList","Dashboard","useFirestoreConnect","collection","orderBy","limit","ordered","ProjectDetails","match","params","projectDetails","data","SignIn","useState","email","password","formFields","setFormFields","changeHandler","e","target","name","value","onSubmit","credentials","preventDefault","signInWithEmailAndPassword","catch","err","htmlFor","onChange","SignUp","userDetails","createUserWithEmailAndPassword","res","doc","set","message","createProject","getState","authorId","add","Date","CreateProject","history","push","AuthRoute","Component","component","rest","render","App","path","exact","store","createStore","applyMiddleware","thunk","withExtraArgument","rrfProps","firebaseConfig","config","userProfile","useFirestoreForProfile","createFirestoreInstance","AuthIsLoaded","children","isLoaded","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c86dbbe5.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Initialize Firebase\r\nconst firebaseConfig = {\r\n    apiKey: 'AIzaSyDyhD64JkG9a3lpCc-hVnlpwETDFxP7n1w',\r\n    authDomain: 'fir-react-app-e9ff5.firebaseapp.com',\r\n    databaseURL: 'https://fir-react-app-e9ff5.firebaseio.com',\r\n    projectId: 'fir-react-app-e9ff5',\r\n    storageBucket: 'fir-react-app-e9ff5.appspot.com',\r\n    messagingSenderId: '198142362131',\r\n    appId: '1:198142362131:web:9569aed2913a7008db75e6',\r\n    measurementId: 'G-9CTGYBQZ3F',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\n\r\nexport default firebase;\r\n","const initialState = {\r\n    authError: null,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('Login Success!');\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n            };\r\n\r\n        case 'LOGIN_ERROR':\r\n            console.log('Login Failed!');\r\n            return {\r\n                ...state,\r\n                authError: 'Login Failed!',\r\n            };\r\n\r\n        case 'LOGOUT_SUCCESS':\r\n            console.log('Logout Success!');\r\n            return state;\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('Signup Success!');\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n            };\r\n\r\n        case 'SIGNUP_ERROR':\r\n            console.log('Signup Failed!');\r\n            return {\r\n                ...state,\r\n                authError: action.payload,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;\r\n","const initialState = {\r\n    projects: [\r\n        { id: 1, title: 'A for Apple', content: 'Alphabets' },\r\n        { id: 2, title: 'B for Ball', content: 'Alphabets' },\r\n        { id: 3, title: 'C for Cat', content: 'Alphabets' },\r\n    ],\r\n};\r\n\r\nconst projectReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('Created Project', action.payload);\r\n            return state;\r\n\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('Create Project Error', action.payload);\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default projectReducer;\r\n","import { combineReducers } from 'redux';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = (props) => {\r\n    const {\r\n        profile: { initials },\r\n    } = props;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <ul className=\"right\">\r\n            <li>\r\n                <NavLink to=\"/create\">New Project</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/\" onClick={() => dispatch(signOut())}>\r\n                    Logout\r\n                </NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n                    {initials}\r\n                </NavLink>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nSignedInLinks.propTypes = {\r\n    profile: PropTypes.shape({\r\n        initials: PropTypes.string,\r\n    }),\r\n};\r\n\r\nexport default SignedInLinks;\r\n","export const signIn = (credentials) => (dispatch, _, getFirebase) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n        .then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', payload: err });\r\n        });\r\n};\r\n\r\nexport const signOut = () => (dispatch, _, getFirebase) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n        .auth()\r\n        .signOut()\r\n        .then(() => {\r\n            dispatch({ type: 'LOGOUT_SUCCESS' });\r\n        });\r\n};\r\n\r\nexport const signUp = (userDetails) => (dispatch, _, getFirebase) => {\r\n    const firebase = getFirebase();\r\n    const firestore = firebase.firestore();\r\n\r\n    firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(userDetails.email, userDetails.password)\r\n        .then((res) => {\r\n            return firestore\r\n                .collection('users')\r\n                .doc(res.user.uid)\r\n                .set({\r\n                    firstName: userDetails.firstName,\r\n                    lastName: userDetails.lastName,\r\n                    initials:\r\n                        userDetails.firstName[0] + userDetails.lastName[0],\r\n                });\r\n        })\r\n        .then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({ type: 'SIGNUP_ERROR', payload: err });\r\n        });\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li>\r\n                <NavLink to=\"/signup\">Sign Up</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/signin\">Login</NavLink>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\n\r\nconst Navbar = () => {\r\n    const auth = useSelector((state) => state.firebase.auth);\r\n    const profile = useSelector((state) => state.firebase.profile);\r\n\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo\">\r\n                    FirebaseApp\r\n                </Link>\r\n                {auth.uid ? (\r\n                    <SignedInLinks profile={profile} />\r\n                ) : (\r\n                    <SignedOutLinks />\r\n                )}\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = ({ notifications }) => {\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications &&\r\n                            notifications.map((notification) => (\r\n                                <li key={notification.id}>\r\n                                    <span className=\"pink-text\">\r\n                                        {notification.user}:{' '}\r\n                                    </span>\r\n                                    <span>{notification.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(\r\n                                            notification.time.toDate()\r\n                                        ).fromNow()}\r\n                                    </div>\r\n                                    <br />\r\n                                </li>\r\n                            ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nNotifications.propTypes = {\r\n    notifications: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string,\r\n            user: PropTypes.string,\r\n            content: PropTypes.string,\r\n            time: PropTypes.shape({\r\n                toDate: PropTypes.func,\r\n            }),\r\n        })\r\n    ),\r\n};\r\n\r\nexport default Notifications;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>\r\n                    Posted by {project.firstName} {project.lastName}\r\n                </p>\r\n                <p className=\"grey-text\">\r\n                    {moment(project.createdAt.toDate()).calendar()}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nProjectSummary.propTypes = {\r\n    project: PropTypes.shape({\r\n        firstName: PropTypes.string.isRequired,\r\n        lastName: PropTypes.string.isRequired,\r\n        createdAt: PropTypes.shape({\r\n            toDate: PropTypes.func,\r\n        }),\r\n    }),\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport ProjectSummary from './ProjectSummary';\r\n\r\nconst ProjectList = ({ projects }) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects &&\r\n                projects.map((project) => (\r\n                    <Link to={`/project/${project.id}`} key={project.id}>\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n                ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nProjectList.propTypes = {\r\n    projects: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string,\r\n        })\r\n    ),\r\n};\r\n\r\nexport default ProjectList;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useFirestoreConnect } from 'react-redux-firebase';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\n\r\nconst Dashboard = () => {\r\n    useFirestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] },\r\n    ]);\r\n\r\n    const projects = useSelector((state) => state.firestore.ordered.projects);\r\n    const notifications = useSelector(\r\n        (state) => state.firestore.ordered.notifications\r\n    );\r\n    console.log(notifications);\r\n\r\n    return (\r\n        <div className=\"dashboard container\">\r\n            <div className=\"row\">\r\n                <div className=\"col s12 m6\">\r\n                    <ProjectList projects={projects} />\r\n                </div>\r\n                <div className=\"col s12 m5 offset-m1\">\r\n                    <Notifications notifications={notifications} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport { useFirestoreConnect } from 'react-redux-firebase';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = (props) => {\r\n    const {\r\n        match: {\r\n            params: { id },\r\n        },\r\n    } = props;\r\n\r\n    useFirestoreConnect([{ collection: 'projects' }]);\r\n    const projectDetails = useSelector((state) =>\r\n        state.firestore.data.projects ? state.firestore.data.projects[id] : null\r\n    );\r\n\r\n    if (!projectDetails) {\r\n        return <div className=\"container center\">Loading...</div>;\r\n    }\r\n    return (\r\n        <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">{projectDetails.title}</span>\r\n                    <p className=\"\">{projectDetails.content}</p>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>\r\n                        Posted by {projectDetails.firstName}\r\n                        {projectDetails.lastName}\r\n                    </div>\r\n                    <div>\r\n                        {moment(projectDetails.createdAt.toDate()).calendar()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nProjectDetails.propTypes = {\r\n    match: PropTypes.shape({\r\n        params: PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n        }),\r\n    }),\r\n};\r\n\r\nexport default ProjectDetails;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst SignIn = () => {\r\n    const [formFields, setFormFields] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const authError = useSelector((state) => state.auth.authError);\r\n    const dispatch = useDispatch();\r\n\r\n    const changeHandler = (e) => {\r\n        setFormFields({\r\n            ...formFields,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(signIn(formFields));\r\n    };\r\n\r\n    const auth = useSelector((state) => state.firebase.auth);\r\n\r\n    if (auth.uid) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={submitHandler} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">E-Mail</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        onChange={changeHandler}\r\n                        value={formFields.email}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        onChange={changeHandler}\r\n                        value={formFields.password}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <button\r\n                        className=\"btn pink lighten-1 z-depth-0\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Login\r\n                    </button>\r\n                    <div className=\"red-text center\">\r\n                        {authError ? <p>{authError}</p> : null}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignIn;\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nconst SignUp = () => {\r\n    const [formFields, setFormFields] = useState({\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n    });\r\n\r\n    const authError = useSelector((state) => state.auth.authError);\r\n    const dispatch = useDispatch();\r\n\r\n    const changeHandler = (e) => {\r\n        setFormFields({\r\n            ...formFields,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(signUp(formFields));\r\n    };\r\n\r\n    const auth = useSelector((state) => state.firebase.auth);\r\n\r\n    if (auth.uid) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={submitHandler} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">E-Mail</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        onChange={changeHandler}\r\n                        value={formFields.email}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        onChange={changeHandler}\r\n                        value={formFields.password}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"firstName\"\r\n                        id=\"firstName\"\r\n                        onChange={changeHandler}\r\n                        value={formFields.firstName}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"lastName\">Last Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"lastName\"\r\n                        id=\"lastName\"\r\n                        onChange={changeHandler}\r\n                        value={formFields.lastName}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <button\r\n                        className=\"btn pink lighten-1 z-depth-0\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Sign up\r\n                    </button>\r\n                    <div className=\"red-text center\">\r\n                        {authError ? <p>{authError.message}</p> : null}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, getFirebase) => {\r\n        const { profile } = getState().firebase;\r\n        const authorId = getState().firebase.auth.uid;\r\n\r\n        const firestore = getFirebase().firestore();\r\n        firestore\r\n            .collection('projects')\r\n            .add({\r\n                firstName: profile.firstName,\r\n                lastName: profile.lastName,\r\n                createdAt: new Date(),\r\n                authorId,\r\n                ...project,\r\n            })\r\n            .then(() => {\r\n                dispatch({ type: 'CREATE_PROJECT', payload: project });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: 'CREATE_PROJECT_ERROR', payload: err });\r\n            });\r\n    };\r\n};\r\n\r\nexport default createProject;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CreateProject = (props) => {\r\n    const [formFields, setFormFields] = useState({\r\n        title: '',\r\n        content: '',\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const changeHandler = (e) => {\r\n        setFormFields({\r\n            ...formFields,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(createProject(formFields));\r\n\r\n        console.log(props.history);\r\n        props.history.push('/');\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={submitHandler} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        id=\"title\"\r\n                        onChange={changeHandler}\r\n                        value={formFields.title}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"content\">Project Content</label>\r\n                    <textarea\r\n                        name=\"content\"\r\n                        id=\"content\"\r\n                        onChange={changeHandler}\r\n                        value={formFields.content}\r\n                        className=\"materialize-textarea\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <button\r\n                        className=\"btn pink lighten-1 z-depth-0\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Create\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nCreateProject.propTypes = {\r\n    history: PropTypes.shape({\r\n        push: PropTypes.func.isRequired,\r\n    }),\r\n};\r\n\r\nexport default CreateProject;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst AuthRoute = ({ component: Component, ...rest }) => {\r\n    const auth = useSelector((state) => state.firebase.auth);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                !auth.uid ? <Redirect to=\"/signin\" /> : <Component {...props} />\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default AuthRoute;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport ProjectDetails from './components/projects/ProjectDetails';\r\nimport SignIn from './components/auth/SignIn';\r\nimport SignUp from './components/auth/SignUp';\r\nimport CreateProject from './components/projects/CreateProject';\r\nimport AuthRoute from './utils/AuthRoute';\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <Switch>\r\n                <AuthRoute path=\"/\" exact component={Dashboard} />\r\n                <AuthRoute\r\n                    path=\"/project/:id\"\r\n                    exact\r\n                    component={ProjectDetails}\r\n                />\r\n                <Route path=\"/signin\" exact component={SignIn} />\r\n                <Route path=\"/signup\" exact component={SignUp} />\r\n                <AuthRoute path=\"/create\" exact component={CreateProject} />\r\n            </Switch>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport {\r\n    ReactReduxFirebaseProvider,\r\n    getFirebase,\r\n    isLoaded,\r\n} from 'react-redux-firebase';\r\nimport { createFirestoreInstance } from 'redux-firestore';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider, useSelector } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport firebaseConfig from './config/firebaseConfig';\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport App from './App';\r\n\r\nconst rrfConfig = {\r\n    userProfile: 'users',\r\n    useFirestoreForProfile: true,\r\n};\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk.withExtraArgument(getFirebase))\r\n);\r\n\r\nconst rrfProps = {\r\n    firebase: firebaseConfig,\r\n    config: rrfConfig,\r\n    dispatch: store.dispatch,\r\n    createFirestoreInstance,\r\n};\r\n\r\nconst AuthIsLoaded = ({ children }) => {\r\n    const auth = useSelector((state) => state.firebase.auth);\r\n\r\n    if (!isLoaded(auth)) {\r\n        return <h3 className=\"center-align bold\">Splash Screen</h3>;\r\n    }\r\n    return children;\r\n};\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ReactReduxFirebaseProvider {...rrfProps}>\r\n            <Router>\r\n                <AuthIsLoaded>\r\n                    <App />\r\n                </AuthIsLoaded>\r\n            </Router>\r\n        </ReactReduxFirebaseProvider>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}